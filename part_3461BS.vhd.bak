LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY PART_3461BS IS
	PORT (
		CH0	: IN  STD_LOGIC_VECTOR(4 DOWNTO 0);
		CH1	: IN  STD_LOGIC_VECTOR(4 DOWNTO 0);
		CH2	: IN  STD_LOGIC_VECTOR(4 DOWNTO 0);
		CH3	: IN  STD_LOGIC_VECTOR(4 DOWNTO 0);
		PIN	: OUT STD_LOGIC_VECTOR(0 TO 11)
	);
END PART_3461BS;

ARCHITECTURE func of PART_3461BS IS
	SIGNAL SEG_DISPLAY : STD_LOGIC_VECTOR(6 DOWNTO 0);
    SIGNAL SEG_DOT : STD_LOGIC;
    SIGNAL SEG_N : STD_LOGIC_VECTOR(3 DOWNTO 0) <= "1000";
BEGIN
    PIN(0) <= SEG_DISPLAY(2);
    PIN(1) <= SEG_DISPLAY(3);
    PIN(2) <= SEG_DOT;
    PIN(3) <= SEG_DISPLAY(4);
    PIN(4) <= SEG_DISPLAY(0);
    PIN(5) <= SEG_N(0);
    PIN(6) <= SEG_DISPLAY(5);
    PIN(7) <= SEG_N(1);
    PIN(8) <= SEG_N(2);
    PIN(9) <= SEG_DISPLAY(1);
    PIN(10) <= SEG_DISPLAY(6);
    PIN(11) <= SEG_N(3);

	PROCESS BEGIN
        SEG_N <= SEG_N(0) & SEG_N(3 DOWNTO 1);
	    SEG_DISPLAY <= OTHERS => '1';

        CASE SEG_N IS
            WHEN "1000" => NEXT_VALUE <= CH0;
            WHEN "0100" => NEXT_VALUE <= CH0;
            WHEN "0010" => NEXT_VALUE <= CH0;
            WHEN "0001" => NEXT_VALUE <= CH0;
        END CASE;


		-- Clockwise from top, then horizontal bar
        SEG_DOT <= NEXT_VALUE(7);
		CASE NEXT_VALUE IS
			WHEN "X0000" => SEG_DISPLAY <= "0000001"; -- 0
			WHEN "X0001" => SEG_DISPLAY <= "1001111"; -- 1
			WHEN "X0010" => SEG_DISPLAY <= "0010010"; -- 2
			WHEN "X0011" => SEG_DISPLAY <= "0000110"; -- 3
			WHEN "X0100" => SEG_DISPLAY <= "1001100"; -- 4
			WHEN "X0101" => SEG_DISPLAY <= "0100100"; -- 5
			WHEN "X0110" => SEG_DISPLAY <= "0100000"; -- 6
			WHEN "X0111" => SEG_DISPLAY <= "0001111"; -- 7
			WHEN "X1000" => SEG_DISPLAY <= "0000000"; -- 8
			WHEN "X1001" => SEG_DISPLAY <= "0000100"; -- 9
			WHEN "X1010" => SEG_DISPLAY <= "0000010"; -- a
			WHEN "X1011" => SEG_DISPLAY <= "1100000"; -- b
			WHEN "X1100" => SEG_DISPLAY <= "0110001"; -- C
			WHEN "X1101" => SEG_DISPLAY <= "1000010"; -- d
			WHEN "X1110" => SEG_DISPLAY <= "0110000"; -- E
			WHEN "X1111" => SEG_DISPLAY <= "0111000"; -- F
		END CASE;
	END PROCESS;
END func;
	